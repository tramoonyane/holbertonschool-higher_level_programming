import unittest
from models.base import Base

class TestBaseMethods(unittest.TestCase):

    def test_id_assignment(self):
        # Test the id assignment logic in the __init__ constructor

        # When id is provided
        b1 = Base(100)
        self.assertEqual(b1.id, 100)

        # When id is not provided
        b2 = Base()
        self.assertEqual(b2.id, 1)

        b3 = Base()
        self.assertEqual(b3.id, 2)

        b4 = Base()
        self.assertEqual(b4.id, 3)

    def test_increment_nb_objects(self):
        # Test if __nb_objects is incremented correctly

        b1 = Base()
        self.assertEqual(Base._Base__nb_objects, 4)  # 3 instances created in the previous test + 1 new instance

        b2 = Base()
        self.assertEqual(Base._Base__nb_objects, 5)  # 4 instances created so far + 1 new instance

    def test_id_type(self):
        # Test if the id is an integer

        b1 = Base(100)
        self.assertIsInstance(b1.id, int)

        b2 = Base()
        self.assertIsInstance(b2.id, int)

if __name__ == '__main__':
    unittest.main()
